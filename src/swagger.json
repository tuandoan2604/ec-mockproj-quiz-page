{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "(Quiz) Server API - Swagger",
    "description": "Account Admin: admin - 12345 <br /> <br /> Account User: user - 12345",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080/"
    }
  ],
  "definitions": {
    "UserLoginDTO": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": {
          "type": "string",
          "example": "admin"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "remember": {
          "type": "boolean"
        }
      }
    },
    "UserDTO": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": {
          "type": "string",
          "example": "quanghv"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "fullName": {
          "type": "string",
          "example": "Hà Văn Quang"
        },
        "role": {
          "type": "string",
          "example": "ROLE_USER"
        }
      }
    },
    "UserDTOToUpdate": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "username": {
          "type": "string",
          "example": "quanghv"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "fullName": {
          "type": "string",
          "example": "Hà Văn Quang"
        },
        "role": {
          "type": "string",
          "example": "ROLE_USER"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": ["Auth Controller"],
        "summary": "Authorization - Login api retrieving token",
        "requestBody": {
          "description": "UserLoginDTO",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserLoginDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/UserLoginDTO"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserLoginDTO"
              }
            },
            "text/plain": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged"
          },
          "400": {
            "description": "Invalid username or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Auth Controller"],
        "summary": "Authorization - Register user",
        "requestBody": {
          "description": "UserDTO",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/UserDTO"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserDTO"
              }
            },
            "text/plain": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered"
          },
          "400 - Invalid username!": {
            "description": "Accepts 5 to 15 characters with any lower case character, digit or special symbol “_-” only."
          },
          "400 - Invalid password!": {
            "description": "Password must contain between 5-20 characters and no spaces."
          },
          "400": {
            "description": "Username is already in use"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/get-all": {
      "get": {
        "tags": ["User Controller"],
        "summary": "Get the list of users",
        "operationId": "getAllUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully - List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/get-one/{id}": {
      "get": {
        "tags": ["User Controller"],
        "summary": "Get user by id",
        "produces": ["application/xml", "application/json"],
        "operationId": "getUserById",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully - User Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID! ID Must be a number"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/create": {
      "post": {
        "tags": ["User Controller"],
        "summary": "Create user",
        "operationId": "createUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "UserDTO",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/UserDTO"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserDTO"
              }
            },
            "text/plain": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Username is already in use"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User Controller"],
        "summary": "Update user",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "UserDTO",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserDTOToUpdate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/definitions/UserDTOToUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserDTOToUpdate"
              }
            },
            "text/plain": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Username is already in use"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/delete/{id}": {
      "delete": {
        "tags": ["User Controller"],
        "summary": "Delete user",
        "produces": ["application/xml", "application/json"],
        "operationId": "deleteUserById",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
